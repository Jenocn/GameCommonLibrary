<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Serialization</name>
    </assembly>
    <members>
        <member name="T:GCL.Serialization.DataObject">
            <summary>
            数据对象
            </summary>
        </member>
        <member name="T:GCL.Serialization.CloneableData`1">
            <summary>
            可克隆的对象
            </summary>
        </member>
        <member name="T:GCL.Serialization.XMLTool">
            <summary>
            XML工具
            </summary>
        </member>
        <member name="M:GCL.Serialization.XMLTool.ParseToList(System.String)">
            <summary>
            解析xml数据
            </summary>
        </member>
        <member name="M:GCL.Serialization.XMLTool.ParseToKV(System.String,System.String)">
            <summary>
            解析xml数据
            </summary>
        </member>
        <member name="M:GCL.Serialization.XMLTool.ToString(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.String}},System.String,System.String)">
            <summary>
            将xml数据转为string
            </summary>
        </member>
        <member name="T:GCL.Serialization.ITable">
            <summary>
            表接口
            </summary>
        </member>
        <member name="T:GCL.Serialization.TableBase`3">
            <summary>
            表基类
            </summary>
            <typeparam name="TClass">表类型</typeparam>
            <typeparam name="TKey">键类型</typeparam>
            <typeparam name="TElement">元素类型</typeparam>
        </member>
        <member name="M:GCL.Serialization.TableBase`3.GetElement(`1)">
            <summary>
            获取元素
            </summary>
        </member>
        <member name="M:GCL.Serialization.TableBase`3.GetEnumerator">
            <summary>
            获取迭代器
            </summary>
        </member>
        <member name="M:GCL.Serialization.TableBase`3.Size">
            <summary>
            表中数据个数
            </summary>
        </member>
        <member name="M:GCL.Serialization.TableBase`3.Emplace(`1,`2)">
            <summary>
            插入数据到表中
            </summary>
        </member>
        <member name="M:GCL.Serialization.TableBase`3.Assign(System.Collections.Generic.Dictionary{`1,`2})">
            <summary>
            直接给表元数据字典赋值
            </summary>
        </member>
        <member name="T:GCL.Serialization.INITool">
            <summary>
            INI工具类
            </summary>
        </member>
        <member name="M:GCL.Serialization.INITool.ParseTo(System.String)">
            <summary>
            解析配置到INI读取器中
            </summary>
        </member>
        <member name="M:GCL.Serialization.INITool.ToString(GCL.Serialization.INIReader)">
            <summary>
            将INI读取器中的配置数据转为字符串
            </summary>
        </member>
        <member name="M:GCL.Serialization.INITool.Parse(System.String)">
            <summary>
            解析配置到Dictionary中
            </summary>
        </member>
        <member name="M:GCL.Serialization.INITool.ToString(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            从Dictionary中转换为INI字符串
            </summary>
        </member>
        <member name="T:GCL.Serialization.JSONTool">
            <summary>
            JSON工具
            </summary>
        </member>
        <member name="M:GCL.Serialization.JSONTool.ParseToList(System.String)">
            <summary>
            解析Json
            </summary>
        </member>
        <member name="M:GCL.Serialization.JSONTool.ParseToKV(System.String)">
            <summary>
            解析Json
            </summary>
        </member>
        <member name="M:GCL.Serialization.JSONTool.ParseToList``1(System.String)">
            <summary>
            解析Json
            </summary>
        </member>
        <member name="M:GCL.Serialization.JSONTool.ParseToObject``1(System.String)">
            <summary>
            <para>直接序列化Json为对象</para>
            <para>如果解析失败返回null</para>
            </summary>
        </member>
        <member name="M:GCL.Serialization.JSONTool.ParseToCustomKV``2(System.String)">
            <summary>
            解析为自定义Key-Value类型的字典中
            </summary>
        </member>
        <member name="M:GCL.Serialization.JSONTool.ToString(System.Object)">
            <summary>
            转换为Json字符串
            </summary>
        </member>
        <member name="T:GCL.Serialization.TableContainer">
            <summary>
            表容器
            </summary>
        </member>
        <member name="M:GCL.Serialization.TableContainer.Push(GCL.Serialization.ITable)">
            <summary>
            添加一个表
            </summary>
        </member>
        <member name="M:GCL.Serialization.TableContainer.Load">
            <summary>
            所有表加载数据
            </summary>
        </member>
        <member name="M:GCL.Serialization.TableContainer.Reload">
            <summary>
            所有表重新加载
            </summary>
        </member>
        <member name="M:GCL.Serialization.TableContainer.Clear">
            <summary>
            所有表清空数据
            </summary>
        </member>
        <member name="T:GCL.Serialization.EncryptTool">
            <summary>
            加密工具
            </summary>
        </member>
        <member name="T:GCL.Serialization.CloneTool">
            <summary>
            克隆工具
            </summary>
        </member>
        <member name="M:GCL.Serialization.CloneTool.Clone``1(``0)">
            <summary>
            克隆对象
            </summary>
        </member>
        <member name="T:GCL.Serialization.INIReader">
            <summary>
            INI配置读取器
            </summary>
        </member>
        <member name="M:GCL.Serialization.INIReader.GetString(System.String,System.String,System.String)">
            <summary>
            获取指定session下的key配置
            </summary>
        </member>
        <member name="M:GCL.Serialization.INIReader.Set(System.String,System.String,System.Object)">
            <summary>
            添加或修改配置
            </summary>
        </member>
        <member name="T:Assets.SimpleEncryption.AES">
            <summary>
            AES (Advanced Encryption Standard) implementation with 128-bit key (default);
            128-bit AES is approved  by NIST, but not the 256-bit AES;
            256-bit AES is slower than the 128-bit AES (by about 40%);
            Use it for secure data protection;
            Do NOT use it for data protection in RAM (in most common scenarios);
            </summary>
        </member>
        <member name="M:Assets.SimpleEncryption.AES.Encrypt(System.Byte[],System.String,System.String,System.String,System.Int32)">
            <summary>
            Encrypt plain byte array using password.
            </summary>
        </member>
        <member name="M:Assets.SimpleEncryption.AES.Decrypt(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Decrypt AES-encrypted string using password.
            </summary>
        </member>
        <member name="M:Assets.SimpleEncryption.RSA.GenerateKeys(System.String@,System.String@)">
            <summary>
            Generates privateKey and publicKey. You must share publicKey but keep privateKey hidden.
            </summary>
        </member>
        <member name="M:Assets.SimpleEncryption.RSA.SignData(System.String,System.String)">
            <summary>
            Sign data with privateKey. Digital signature may be verified using publicKey later.
            </summary>
        </member>
        <member name="M:Assets.SimpleEncryption.RSA.CheckSignature(System.String,System.String,System.String)">
            <summary>
            Check digital signature with publicKey.
            </summary>
        </member>
        <member name="M:Assets.SimpleEncryption.RSA.EncryptText(System.String,System.String)">
            <summary>
            Encrypt a text with publicKey. The only one who knows privateKey can decrypt it.
            </summary>
        </member>
        <member name="M:Assets.SimpleEncryption.RSA.DecryptText(System.String,System.String)">
            <summary>
            Decrypt data with privateKey.
            </summary>
        </member>
        <member name="T:Assets.SimpleEncryption.Base64">
            <summary>
            Base64 helper.
            </summary>
        </member>
        <member name="M:Assets.SimpleEncryption.Base64.Encode(System.String)">
            <summary>
            Encode plain string to Base64.
            </summary>
        </member>
        <member name="M:Assets.SimpleEncryption.Base64.Decode(System.String)">
            <summary>
            Decode encoded Base64-string.
            </summary>
        </member>
        <member name="T:Assets.SimpleEncryption.B64X">
            <summary>
            Simple and fast Base64 XOR encoding with a key. Suitable for data protection in RAM. Do NOT use for secure data encryption.
            </summary>
        </member>
        <member name="M:Assets.SimpleEncryption.B64X.Encrypt(System.String,System.String)">
            <summary>
            Encrypt plain string.
            </summary>
        </member>
        <member name="M:Assets.SimpleEncryption.B64X.Decrypt(System.String,System.String)">
            <summary>
            Decrypt encrypted string.
            </summary>
        </member>
        <member name="T:Assets.SimpleEncryption.Md5">
            <summary>
            Md5 helper.
            </summary>
        </member>
        <member name="M:Assets.SimpleEncryption.Md5.ComputeHash(System.String)">
            <summary>
            Compute Md5-hash from string.
            </summary>
        </member>
        <member name="T:Assets.SimpleEncryption.B64R">
            <summary>
            Simple and fast Base64 encoding algorithm with byte reverse. Suitable for data protection in RAM. Use for unsafe data storing outside RAM. Do NOT use for secure data encryption.
            </summary>
        </member>
        <member name="M:Assets.SimpleEncryption.B64R.Encode(System.String)">
            <summary>
            Encode plain string
            </summary>
        </member>
        <member name="M:Assets.SimpleEncryption.B64R.Decode(System.String)">
            <summary>
            Decode protected string.
            </summary>
        </member>
    </members>
</doc>
